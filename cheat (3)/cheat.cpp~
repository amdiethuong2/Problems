#include<cstdio>
#include<cmath>
#include<vector>
#include<string>
#include<cstring>
#include<cstdlib>
#include<iostream>
#include<algorithm>
#include<map>
#include<set>
#define MAX 100005
using namespace std;
int n,p,k,t;
int a[MAX],sv[MAX];
//------------------------------------------------------------------------------
void quicksort(int l,int r)
{
     if(l>=r) return;
     int i=l;
     int j=r;
     int x=sv[(l+r)/2];//x=A[random(l-r)]
     while(i<=j)
     {
                while(sv[i]<x) i++;
                while(sv[j]>x) j--;
                if(i<=j)
                {
                        int temp=sv[i];
                        sv[i]=sv[j];
                        sv[j]=temp;
                        i++;j--;
                }
     }
     quicksort(l,j);
     quicksort(i,r);
}
void near()
{
    int i,k=0;
    for(i=t+1;i<=1000;i++)
    if(a[i] !=0)
    {
        k++;
        if(k == p+1){t=i;break;}
    }
}
//------------------------------------------------------------------------------
int main()
{
    int d,l,cnt,i,j;
    scanf("%d %d %d", &n, &k, &p);
    cnt=0;l=k/n;
    for(i=1;i<=k;i++) a[i]=i;
    for(i=1;i<=k;i++)
    for(j=1;j<=k;j++) a[k*j+i]=a[i];
    t=1;
    do{
        d++;
        for(i=1;i<=k;i++) a[i*k+t]=0;
        if(d % n == 0) sv[++cnt]=a[t];
        a[t]==0;
        if(cnt == l) break;
        near();
    }while(true);
    quicksort(1,cnt);
    for(i=1;i<=n;i++)
    printf("%d\n", sv[i]);
    return 0;
}
